<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Rotating Cube</title>
    <link rel="stylesheet" href="style.css">
</head>
<body>
    <section class="scene">
        <section class="cube">
            <section class="face front"></section>
            <section class="face back"></section>
            <section class="face left"></section>
            <section class="face right"></section>
            <section class="face top"></section>
            <section class="face bottom"></section>
        </section>
    </section>
    <script src="script.js"></script>
</body>
</html>

////script.js

document.addEventListener('DOMContentLoaded', () => {
    const cube = document.querySelector('.cube');
    let angleX = 0;
    let angleY = 0;

    function rotateCube() {
        angleX += 1;
        angleY += 1;
        cube.style.transform = `rotateX(${angleX}deg) rotateY(${angleY}deg)`;
        requestAnimationFrame(rotateCube);
    }
    rotateCube();
});

////style.css

body {
    margin: 0;
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    background-color: #000;
}

.scene {
    perspective: 600px;
}

.cube {
    position: relative;
    width: 100px;
    height: 100px;
    transform-style: preserve-3d;
    transform: rotateX(0deg) rotateY(0deg);
    animation: rotate 5s infinite linear;
}

.face {
    position: absolute;
    width: 100px;
    height: 100px;
    border: 2px solid #ffffff;
}

.cube .front  { transform: translateZ(50px); }
.cube .back   { transform: rotateY(180deg) translateZ(50px); }
.cube .left   { transform: rotateY(-90deg) translateZ(50px); }
.cube .right  { transform: rotateY(90deg) translateZ(50px); }
.cube .top    { transform: rotateX(90deg) translateZ(50px); }
.cube .bottom { transform: rotateX(-90deg) translateZ(50px); }

/* @keyframes rotate {
    from { transform: rotateX(0deg) rotateY(0deg); }
    to { transform: rotateX(360deg) rotateY(360deg); }
} */
